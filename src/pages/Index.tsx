import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Switch } from '@/components/ui/switch';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

export default function Index() {
  const [activeTab, setActiveTab] = useState('feed');
  const [newPost, setNewPost] = useState('');
  const [privacySettings, setPrivacySettings] = useState({
    profileVisible: true,
    messagesFromFriends: true,
    antiSpam: true,
    dataProtection: true
  });

  const posts = [
    {
      id: 1,
      author: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
      content: '–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤! üåü –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–≤.',
      timestamp: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      likes: 24,
      comments: 8,
      shares: 3,
      hasImage: true
    },
    {
      id: 2,
      author: '–ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–æ–≤',
      content: '–ó–∞–ø—É—Å—Ç–∏–ª –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞. –ö—Ç–æ —Ö–æ—á–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º?',
      timestamp: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
      likes: 18,
      comments: 12,
      shares: 7
    },
    {
      id: 3,
      author: '–ï–ª–µ–Ω–∞ –ö—É–∑–Ω–µ—Ü–æ–≤–∞',
      content: '–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏.',
      timestamp: '6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
      likes: 45,
      comments: 23,
      shares: 15
    }
  ];

  const friends = [
    { name: '–î–º–∏—Ç—Ä–∏–π', status: 'online' },
    { name: '–û–ª—å–≥–∞', status: 'offline' },
    { name: '–°–µ—Ä–≥–µ–π', status: 'online' },
    { name: '–ú–∞—Ä–∏—è', status: 'away' }
  ];

  const communities = [
    { name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ—ã –†–æ—Å—Å–∏–∏', members: '12.5K', category: '–ò—Å–∫—É—Å—Å—Ç–≤–æ' },
    { name: 'IT –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã', members: '8.2K', category: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏', members: '15.7K', category: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è' }
  ];

  const NavButton = ({ id, label, icon }: { id: string; label: string; icon: string }) => (
    <Button
      variant={activeTab === id ? "default" : "ghost"}
      className={`flex items-center gap-2 transition-all duration-200 ${
        activeTab === id 
          ? 'bg-primary text-primary-foreground shadow-lg' 
          : 'hover:bg-muted hover:scale-105'
      }`}
      onClick={() => setActiveTab(id)}
    >
      <Icon name={icon} size={20} />
      {label}
    </Button>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-muted/30 to-accent/10">
      {/* Header */}
      <header className="sticky top-0 z-50 bg-background/95 backdrop-blur-md border-b border-border shadow-sm">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <h1 className="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
                SocialNet
              </h1>
              <Badge variant="secondary" className="animate-pulse">
                –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–µ—Ç—å
              </Badge>
            </div>
            
            <nav className="flex items-center gap-2">
              <NavButton id="feed" label="–õ–µ–Ω—Ç–∞" icon="Home" />
              <NavButton id="profile" label="–ü—Ä–æ—Ñ–∏–ª—å" icon="User" />
              <NavButton id="friends" label="–î—Ä—É–∑—å—è" icon="Users" />
              <NavButton id="messages" label="–°–æ–æ–±—â–µ–Ω–∏—è" icon="MessageCircle" />
              <NavButton id="communities" label="–ì—Ä—É–ø–ø—ã" icon="Users2" />
              <NavButton id="media" label="–ú–µ–¥–∏–∞" icon="Image" />
            </nav>

            <div className="flex items-center gap-3">
              <Button variant="outline" size="sm">
                <Icon name="Bell" size={16} />
              </Button>
              <Button variant="outline" size="sm">
                <Icon name="Settings" size={16} />
              </Button>
              <Avatar className="w-8 h-8">
                <AvatarImage src="/img/ba58ae71-0a10-4506-9c6b-ef601bef01c5.jpg" />
                <AvatarFallback>–í–´</AvatarFallback>
              </Avatar>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-6">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          
          {/* Left Sidebar - Privacy & Security */}
          <Card className="lg:col-span-1 h-fit">
            <CardHeader>
              <div className="flex items-center gap-2">
                <Icon name="Shield" size={20} className="text-accent" />
                <h3 className="font-semibold">–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
              </div>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <span className="text-sm">–ü—Ä–æ—Ñ–∏–ª—å –≤–∏–¥–µ–Ω –≤—Å–µ–º</span>
                  <Switch 
                    checked={privacySettings.profileVisible}
                    onCheckedChange={(checked) => 
                      setPrivacySettings(prev => ({ ...prev, profileVisible: checked }))}
                  />
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm">–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –¥—Ä—É–∑–µ–π</span>
                  <Switch 
                    checked={privacySettings.messagesFromFriends}
                    onCheckedChange={(checked) => 
                      setPrivacySettings(prev => ({ ...prev, messagesFromFriends: checked }))}
                  />
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm">–ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞</span>
                  <Switch 
                    checked={privacySettings.antiSpam}
                    onCheckedChange={(checked) => 
                      setPrivacySettings(prev => ({ ...prev, antiSpam: checked }))}
                  />
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm">–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö</span>
                  <Switch 
                    checked={privacySettings.dataProtection}
                    onCheckedChange={(checked) => 
                      setPrivacySettings(prev => ({ ...prev, dataProtection: checked }))}
                  />
                </div>
              </div>
              
              <Separator />
              
              <div className="space-y-2">
                <h4 className="text-sm font-medium text-muted-foreground">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h4>
                <div className="grid grid-cols-2 gap-2 text-center">
                  <div className="p-2 bg-primary/10 rounded-lg">
                    <div className="text-lg font-bold text-primary">152</div>
                    <div className="text-xs text-muted-foreground">–î—Ä—É–∑–µ–π</div>
                  </div>
                  <div className="p-2 bg-secondary/10 rounded-lg">
                    <div className="text-lg font-bold text-secondary">27</div>
                    <div className="text-xs text-muted-foreground">–ì—Ä—É–ø–ø</div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Main Content Area */}
          <div className="lg:col-span-2 space-y-6">
            
            {/* Create Post */}
            {activeTab === 'feed' && (
              <Card>
                <CardContent className="pt-6">
                  <div className="flex gap-3">
                    <Avatar>
                      <AvatarImage src="/img/ba58ae71-0a10-4506-9c6b-ef601bef01c5.jpg" />
                      <AvatarFallback>–í–´</AvatarFallback>
                    </Avatar>
                    <div className="flex-1 space-y-3">
                      <Textarea
                        placeholder="–ß—Ç–æ —É –≤–∞—Å –Ω–æ–≤–æ–≥–æ?"
                        value={newPost}
                        onChange={(e) => setNewPost(e.target.value)}
                        className="min-h-[80px] resize-none"
                      />
                      <div className="flex items-center justify-between">
                        <div className="flex gap-2">
                          <Button variant="outline" size="sm">
                            <Icon name="Image" size={16} className="mr-1" />
                            –§–æ—Ç–æ
                          </Button>
                          <Button variant="outline" size="sm">
                            <Icon name="Video" size={16} className="mr-1" />
                            –í–∏–¥–µ–æ
                          </Button>
                          <Button variant="outline" size="sm">
                            <Icon name="Music" size={16} className="mr-1" />
                            –ê—É–¥–∏–æ
                          </Button>
                        </div>
                        <Button>–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å</Button>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Posts Feed */}
            {activeTab === 'feed' && (
              <div className="space-y-4">
                {posts.map((post) => (
                  <Card key={post.id} className="hover:shadow-md transition-shadow duration-200">
                    <CardContent className="pt-6">
                      <div className="flex gap-3">
                        <Avatar>
                          <AvatarImage src="/img/ba58ae71-0a10-4506-9c6b-ef601bef01c5.jpg" />
                          <AvatarFallback>{post.author[0]}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <h4 className="font-semibold">{post.author}</h4>
                            <span className="text-sm text-muted-foreground">{post.timestamp}</span>
                          </div>
                          <p className="mb-4 leading-relaxed">{post.content}</p>
                          {post.hasImage && (
                            <div className="mb-4 rounded-lg overflow-hidden bg-muted/50 h-48 flex items-center justify-center">
                              <Icon name="Image" size={48} className="text-muted-foreground" />
                            </div>
                          )}
                          <div className="flex items-center gap-6">
                            <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                              <Icon name="Heart" size={16} className="mr-1" />
                              {post.likes}
                            </Button>
                            <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                              <Icon name="MessageCircle" size={16} className="mr-1" />
                              {post.comments}
                            </Button>
                            <Button variant="ghost" size="sm" className="text-muted-foreground hover:text-primary">
                              <Icon name="Share2" size={16} className="mr-1" />
                              {post.shares}
                            </Button>
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            )}

            {/* Profile Tab */}
            {activeTab === 'profile' && (
              <Card>
                <CardContent className="pt-6">
                  <div className="text-center space-y-4">
                    <Avatar className="w-24 h-24 mx-auto">
                      <AvatarImage src="/img/ba58ae71-0a10-4506-9c6b-ef601bef01c5.jpg" />
                      <AvatarFallback className="text-2xl">–í–´</AvatarFallback>
                    </Avatar>
                    <div>
                      <h2 className="text-2xl font-bold">–í–∞—à –ü—Ä–æ—Ñ–∏–ª—å</h2>
                      <p className="text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏</p>
                    </div>
                    <div className="grid grid-cols-3 gap-4 max-w-md mx-auto">
                      <div className="text-center">
                        <div className="text-2xl font-bold text-primary">152</div>
                        <div className="text-sm text-muted-foreground">–î—Ä—É–∑–µ–π</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-secondary">89</div>
                        <div className="text-sm text-muted-foreground">–ü–æ—Å—Ç–æ–≤</div>
                      </div>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-accent">27</div>
                        <div className="text-sm text-muted-foreground">–ì—Ä—É–ø–ø</div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Messages Tab */}
            {activeTab === 'messages' && (
              <Card>
                <CardHeader>
                  <h3 className="font-semibold flex items-center gap-2">
                    <Icon name="MessageCircle" size={20} />
                    –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                  </h3>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    {friends.slice(0, 2).map((friend, index) => (
                      <div key={index} className="flex items-center gap-3 p-3 rounded-lg hover:bg-muted/50 cursor-pointer">
                        <Avatar>
                          <AvatarFallback>{friend.name[0]}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex items-center gap-2">
                            <span className="font-medium">{friend.name}</span>
                            <div className={`w-2 h-2 rounded-full ${
                              friend.status === 'online' ? 'bg-green-500' : 
                              friend.status === 'away' ? 'bg-yellow-500' : 'bg-gray-400'
                            }`} />
                          </div>
                          <p className="text-sm text-muted-foreground">
                            {index === 0 ? '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?' : '–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞!'}
                          </p>
                        </div>
                        <Badge variant="secondary">2</Badge>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}
          </div>

          {/* Right Sidebar */}
          <Card className="lg:col-span-1 h-fit">
            <CardHeader>
              <h3 className="font-semibold flex items-center gap-2">
                <Icon name="Users" size={20} />
                –î—Ä—É–∑—å—è –æ–Ω–ª–∞–π–Ω
              </h3>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {friends.map((friend, index) => (
                  <div key={index} className="flex items-center gap-2">
                    <Avatar className="w-8 h-8">
                      <AvatarFallback className="text-xs">{friend.name[0]}</AvatarFallback>
                    </Avatar>
                    <span className="text-sm flex-1">{friend.name}</span>
                    <div className={`w-2 h-2 rounded-full ${
                      friend.status === 'online' ? 'bg-green-500' : 
                      friend.status === 'away' ? 'bg-yellow-500' : 'bg-gray-400'
                    }`} />
                  </div>
                ))}
              </div>
            </CardContent>
            
            <Separator />
            
            <CardHeader>
              <h3 className="font-semibold flex items-center gap-2">
                <Icon name="Users2" size={20} />
                –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥—Ä—É–ø–ø—ã
              </h3>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {communities.map((community, index) => (
                  <div key={index} className="space-y-2">
                    <div className="flex items-center justify-between">
                      <span className="text-sm font-medium">{community.name}</span>
                      <Button variant="outline" size="sm">
                        <Icon name="Plus" size={12} />
                      </Button>
                    </div>
                    <div className="flex items-center justify-between text-xs text-muted-foreground">
                      <span>{community.members} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                      <Badge variant="secondary" className="text-xs">{community.category}</Badge>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}